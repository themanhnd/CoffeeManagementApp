# version: '3.8'  # Removed as it's obsolete in Docker Compose v2
services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
      # Tạo thêm database cho Coffee Shop
      POSTGRES_MULTIPLE_DATABASES: coffeeshop
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: unless-stopped

  # Keycloak - điều chỉnh port để tránh xung đột với Spring Boot app
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
    command: start-dev
    depends_on:
      - postgres
    ports:
      - "8180:8080"  # Đổi từ 8080 sang 8180 để tránh xung đột với Spring Boot
    networks:
      - app-network
    restart: unless-stopped

  # Zookeeper cho Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network
    restart: unless-stopped

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - app-network
    restart: unless-stopped

  # Kafka UI (Optional - để quản lý Kafka dễ dàng hơn)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - "8088:8080"
    networks:
      - app-network
    restart: unless-stopped

  # Axon Server - Event Store và Message Routing
  axonserver:
    image: axoniq/axonserver:latest
    container_name: axonserver
    environment:
      - AXONIQ_AXONSERVER_NAME=axonserver
      - AXONIQ_AXONSERVER_HOSTNAME=axonserver
    ports:
      - "8024:8024"  # gRPC port
      - "8124:8124"  # HTTP port for GUI
    volumes:
      - axonserver_data:/data
      - axonserver_events:/eventdata
      - axonserver_config:/config
    networks:
      - app-network
    restart: unless-stopped

  # Redis - Cache và Session Storage
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Redis Commander - GUI để quản lý Redis (Optional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    depends_on:
      - redis
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - app-network
    restart: unless-stopped

  # Coffee Shop Management Application
  coffee-app:
    build: .
    container_name: coffee-management-app
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/coffe_management
      - SPRING_DATASOURCE_USERNAME=keycloak
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - AXON_AXONSERVER_SERVERS=axonserver:8124
    ports:
      - "8090:8080"  # Changed to avoid conflict with Keycloak
    depends_on:
      - postgres
      - redis
      - kafka
      - axonserver
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:
  axonserver_data:
  axonserver_events:
  axonserver_config:
  redis_data:

networks:
  app-network:
    driver: bridge

